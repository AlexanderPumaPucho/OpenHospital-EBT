/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 18 17:50:24 GMT 2024
 */

package org.vaccine.manager;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.vaccine.model.Vaccine;
import org.vaccine.model.VaccineType;
import org.vaccine.service.VaccineIoOperationRepository;
import org.vaccine.service.VaccineIoOperations;

import java.util.List;
import java.util.Optional;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class VaccineBrowserManager_ESTest extends VaccineBrowserManager_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        VaccineIoOperationRepository vaccineIoOperationRepository0 = mock(VaccineIoOperationRepository.class, new ViolatedAssumptionAnswer());
        doReturn((Object) null).when(vaccineIoOperationRepository0).save(any(Vaccine.class));
        VaccineIoOperations vaccineIoOperations0 = new VaccineIoOperations(vaccineIoOperationRepository0);
        VaccineBrowserManager vaccineBrowserManager0 = new VaccineBrowserManager(vaccineIoOperations0);
        VaccineType vaccineType0 = new VaccineType();
        Vaccine vaccine0 = new Vaccine("0:Ttf", "<W+nwE1PLuGLYFN", vaccineType0);
        Vaccine vaccine1 = vaccineBrowserManager0.updateVaccine(vaccine0);
        assertNull(vaccine1);
    }

    @Test(timeout = 4000)
    public void test01() throws Throwable {
        VaccineType vaccineType0 = new VaccineType("(mX2GzH<C-aYT&f", "(mX2GzH<C-aYT&f");
        Vaccine vaccine0 = new Vaccine("G'!xayR#=", "(mX2GzH<C-aYT&f", vaccineType0);
        VaccineIoOperationRepository vaccineIoOperationRepository0 = mock(VaccineIoOperationRepository.class, new ViolatedAssumptionAnswer());
        doReturn(vaccine0).when(vaccineIoOperationRepository0).save(any(Vaccine.class));
        VaccineIoOperations vaccineIoOperations0 = new VaccineIoOperations(vaccineIoOperationRepository0);
        VaccineBrowserManager vaccineBrowserManager0 = new VaccineBrowserManager(vaccineIoOperations0);
        Vaccine vaccine1 = vaccineBrowserManager0.updateVaccine(vaccine0);
        assertSame(vaccine0, vaccine1);
    }

    @Test(timeout = 4000)
    public void test02() throws Throwable {
        VaccineIoOperationRepository vaccineIoOperationRepository0 = mock(VaccineIoOperationRepository.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(vaccineIoOperationRepository0).existsById(anyString());
        doReturn((Object) null).when(vaccineIoOperationRepository0).save(any(Vaccine.class));
        VaccineIoOperations vaccineIoOperations0 = new VaccineIoOperations(vaccineIoOperationRepository0);
        VaccineBrowserManager vaccineBrowserManager0 = new VaccineBrowserManager(vaccineIoOperations0);
        VaccineType vaccineType0 = new VaccineType();
        Vaccine vaccine0 = new Vaccine("DB", "angal.common.thecodeisalreadyinuse.msg", vaccineType0);
        Vaccine vaccine1 = vaccineBrowserManager0.newVaccine(vaccine0);
        assertNull(vaccine1);
    }

    @Test(timeout = 4000)
    public void test03() throws Throwable {
        VaccineType vaccineType0 = new VaccineType();
        Vaccine vaccine0 = new Vaccine("Mk$'+", "Mk$'+", vaccineType0);
        VaccineIoOperationRepository vaccineIoOperationRepository0 = mock(VaccineIoOperationRepository.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(vaccineIoOperationRepository0).existsById(anyString());
        doReturn(vaccine0).when(vaccineIoOperationRepository0).save(any(Vaccine.class));
        VaccineIoOperations vaccineIoOperations0 = new VaccineIoOperations(vaccineIoOperationRepository0);
        VaccineBrowserManager vaccineBrowserManager0 = new VaccineBrowserManager(vaccineIoOperations0);
        Vaccine vaccine1 = vaccineBrowserManager0.newVaccine(vaccine0);
        assertSame(vaccine1, vaccine0);
    }

    @Test(timeout = 4000)
    public void test04() throws Throwable {
        VaccineIoOperationRepository vaccineIoOperationRepository0 = mock(VaccineIoOperationRepository.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(vaccineIoOperationRepository0).existsById(anyString());
        VaccineIoOperations vaccineIoOperations0 = new VaccineIoOperations(vaccineIoOperationRepository0);
        VaccineBrowserManager vaccineBrowserManager0 = new VaccineBrowserManager(vaccineIoOperations0);
        boolean boolean0 = vaccineBrowserManager0.isCodePresent("%qi|ooQS\u0007jV|");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test05() throws Throwable {
        VaccineIoOperationRepository vaccineIoOperationRepository0 = mock(VaccineIoOperationRepository.class, new ViolatedAssumptionAnswer());
        doReturn((List) null).when(vaccineIoOperationRepository0).findAllByOrderByDescriptionAsc();
        VaccineIoOperations vaccineIoOperations0 = new VaccineIoOperations(vaccineIoOperationRepository0);
        VaccineBrowserManager vaccineBrowserManager0 = new VaccineBrowserManager(vaccineIoOperations0);
        List<Vaccine> list0 = vaccineBrowserManager0.getVaccine((String) null);
        assertNull(list0);
    }

    @Test(timeout = 4000)
    public void test06() throws Throwable {
        VaccineIoOperationRepository vaccineIoOperationRepository0 = mock(VaccineIoOperationRepository.class, new ViolatedAssumptionAnswer());
        doReturn((List) null).when(vaccineIoOperationRepository0).findAllByOrderByDescriptionAsc();
        VaccineIoOperations vaccineIoOperations0 = new VaccineIoOperations(vaccineIoOperationRepository0);
        VaccineBrowserManager vaccineBrowserManager0 = new VaccineBrowserManager(vaccineIoOperations0);
        List<Vaccine> list0 = vaccineBrowserManager0.getVaccine();
        assertNull(list0);
    }

    @Test(timeout = 4000)
    public void test07() throws Throwable {
        VaccineIoOperationRepository vaccineIoOperationRepository0 = mock(VaccineIoOperationRepository.class, new ViolatedAssumptionAnswer());
        doReturn((Optional) null).when(vaccineIoOperationRepository0).findById(anyString());
        VaccineIoOperations vaccineIoOperations0 = new VaccineIoOperations(vaccineIoOperationRepository0);
        VaccineBrowserManager vaccineBrowserManager0 = new VaccineBrowserManager(vaccineIoOperations0);
        // Undeclared exception!
        try {
            vaccineBrowserManager0.findVaccine("org.vaccine.service.VaccineIoOperations");
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.vaccine.service.VaccineIoOperations", e);
        }
    }

    @Test(timeout = 4000)
    public void test08() throws Throwable {
        VaccineIoOperationRepository vaccineIoOperationRepository0 = mock(VaccineIoOperationRepository.class, new ViolatedAssumptionAnswer());
        VaccineIoOperations vaccineIoOperations0 = new VaccineIoOperations(vaccineIoOperationRepository0);
        VaccineBrowserManager vaccineBrowserManager0 = new VaccineBrowserManager(vaccineIoOperations0);
        Vaccine vaccine0 = new Vaccine();
        // Undeclared exception!
        try {
            vaccineBrowserManager0.validateVaccine(vaccine0, false);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test09() throws Throwable {
        VaccineIoOperationRepository vaccineIoOperationRepository0 = mock(VaccineIoOperationRepository.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(vaccineIoOperationRepository0).existsById(anyString());
        VaccineIoOperations vaccineIoOperations0 = new VaccineIoOperations(vaccineIoOperationRepository0);
        VaccineBrowserManager vaccineBrowserManager0 = new VaccineBrowserManager(vaccineIoOperations0);
        VaccineType vaccineType0 = new VaccineType(";9:0lWU2(6~xb\"1Lyls", "%)]h\"'3Pn03P(L");
        Vaccine vaccine0 = new Vaccine(";9:0lWU2(6~xb\"1Lyls", "/SS)VV\"v*,mv+=wi2", vaccineType0);
        try {
            vaccineBrowserManager0.newVaccine(vaccine0);
            fail("Expecting exception: Exception");

        } catch (Exception e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.vaccine.manager.VaccineBrowserManager", e);
        }
    }

    @Test(timeout = 4000)
    public void test10() throws Throwable {
        VaccineIoOperations vaccineIoOperations0 = new VaccineIoOperations((VaccineIoOperationRepository) null);
        VaccineBrowserManager vaccineBrowserManager0 = new VaccineBrowserManager(vaccineIoOperations0);
        // Undeclared exception!
        try {
            vaccineBrowserManager0.isCodePresent("");
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.vaccine.service.VaccineIoOperations", e);
        }
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        VaccineIoOperations vaccineIoOperations0 = new VaccineIoOperations((VaccineIoOperationRepository) null);
        VaccineBrowserManager vaccineBrowserManager0 = new VaccineBrowserManager(vaccineIoOperations0);
        // Undeclared exception!
        try {
            vaccineBrowserManager0.getVaccine("3E&v)*Y[(21<9Aua,Oh");
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.vaccine.service.VaccineIoOperations", e);
        }
    }

    @Test(timeout = 4000)
    public void test12() throws Throwable {
        VaccineIoOperations vaccineIoOperations0 = new VaccineIoOperations((VaccineIoOperationRepository) null);
        VaccineBrowserManager vaccineBrowserManager0 = new VaccineBrowserManager(vaccineIoOperations0);
        // Undeclared exception!
        try {
            vaccineBrowserManager0.getVaccine();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.vaccine.service.VaccineIoOperations", e);
        }
    }

    @Test(timeout = 4000)
    public void test13() throws Throwable {
        VaccineIoOperationRepository vaccineIoOperationRepository0 = mock(VaccineIoOperationRepository.class, new ViolatedAssumptionAnswer());
        doReturn(true).when(vaccineIoOperationRepository0).existsById(anyString());
        VaccineIoOperations vaccineIoOperations0 = new VaccineIoOperations(vaccineIoOperationRepository0);
        VaccineBrowserManager vaccineBrowserManager0 = new VaccineBrowserManager(vaccineIoOperations0);
        boolean boolean0 = vaccineBrowserManager0.isCodePresent("BILLSREPORTPENDING");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test14() throws Throwable {
        VaccineType vaccineType0 = new VaccineType("G'!xayR#=", "G'!xayR#=");
        VaccineIoOperationRepository vaccineIoOperationRepository0 = mock(VaccineIoOperationRepository.class, new ViolatedAssumptionAnswer());
        doReturn(true).when(vaccineIoOperationRepository0).existsById(anyString());
        VaccineIoOperations vaccineIoOperations0 = new VaccineIoOperations(vaccineIoOperationRepository0);
        VaccineBrowserManager vaccineBrowserManager0 = new VaccineBrowserManager(vaccineIoOperations0);
        Vaccine vaccine0 = new Vaccine(" ", " ", vaccineType0);
        try {
            vaccineBrowserManager0.validateVaccine(vaccine0, true);
            fail("Expecting exception: Exception");

        } catch (Exception e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.vaccine.manager.VaccineBrowserManager", e);
        }
    }

    @Test(timeout = 4000)
    public void test15() throws Throwable {
        VaccineType vaccineType0 = new VaccineType("(mX2GzH<C-aYT&f", "(mX2GzH<C-aYT&f");
        Vaccine vaccine0 = new Vaccine("G'!xayR#=", "(mX2GzH<C-aYT&f", vaccineType0);
        VaccineIoOperationRepository vaccineIoOperationRepository0 = mock(VaccineIoOperationRepository.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(vaccineIoOperationRepository0).existsById(anyString());
        VaccineIoOperations vaccineIoOperations0 = new VaccineIoOperations(vaccineIoOperationRepository0);
        VaccineBrowserManager vaccineBrowserManager0 = new VaccineBrowserManager(vaccineIoOperations0);
        vaccineBrowserManager0.validateVaccine(vaccine0, true);
        assertEquals("(mX2GzH<C-aYT&f", vaccine0.getDescription());
    }

    @Test(timeout = 4000)
    public void test16() throws Throwable {
        VaccineBrowserManager vaccineBrowserManager0 = new VaccineBrowserManager((VaccineIoOperations) null);
        VaccineType vaccineType0 = new VaccineType();
        Vaccine vaccine0 = new Vaccine("", "", vaccineType0);
        // Undeclared exception!
        try {
            vaccineBrowserManager0.newVaccine(vaccine0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.vaccine.manager.VaccineBrowserManager", e);
        }
    }

    @Test(timeout = 4000)
    public void test17() throws Throwable {
        VaccineIoOperationRepository vaccineIoOperationRepository0 = mock(VaccineIoOperationRepository.class, new ViolatedAssumptionAnswer());
        VaccineIoOperations vaccineIoOperations0 = new VaccineIoOperations(vaccineIoOperationRepository0);
        VaccineBrowserManager vaccineBrowserManager0 = new VaccineBrowserManager(vaccineIoOperations0);
        VaccineType vaccineType0 = new VaccineType();
        Vaccine vaccine0 = new Vaccine("angal.common.pleaseinsertacode.msg", "wgl\"wyAJ[uA{", vaccineType0);
        try {
            vaccineBrowserManager0.updateVaccine(vaccine0);
            fail("Expecting exception: Exception");

        } catch (Exception e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.vaccine.manager.VaccineBrowserManager", e);
        }
    }
}
